#!/bin/bash
# bash and not sh: we use bash arrays
# Available non-GCC options:
# --no-startup: do not link with the startup code
# --light-startup: use crt0light.o instead
# --light-startup-no-header: use crt0lightnoheader.o instead
# --no-ldscript: do not use the standard Ndless linker script

UNAME=`uname -s | tr '[A-Z]' '[a-z]'`
DIRNAME=`dirname "$0"`

# DIRNAME may not be in the toolchain directory if this script was symlinked.
# try to find the symlink target	
which readlink >/dev/null 2>&1 && readlink "$0" >/dev/null 2>&1 && {
    SYMLINK=`readlink "$0"`
    
    # On MacOS X, the readlink command hasn't the same behavior than the others operating systems based on Unix.
    if [ "$UNAME" == "darwin" ]; then
    	DIRNAME=`dirname "$SYMLINK"`
    else
    	DIRNAME="$SYMLINK"/..
    fi
}

# Cygwin owns a dedicated command to find the symlink target
if [ "$UNAME" = "cygwin" ]; then
	DIRNAME=`cygpath --path --windows "$DIRNAME"`
fi

nostdlib=false
nostartup=false
lightstartup=false
noprgmheader=false
noldscript=false
# an array is used to change the arguments while supporting arguments with spaces
declare -a args
for arg in "$@"; do
	case $arg in
		-nostdlib) nostdlib=true; args=("${args[@]}" $arg);;
		--no-startup) nostartup=true;;
		--light-startup) lightstartup=true;;
		--light-startup-no-header) noprgmheader=true;;
		--no-ldscript) noldscript=true;;
		*) args=("${args[@]}" $arg);;
	esac
done
if [ $nostdlib = false ]; then
	args=("${args[@]}" "$DIRNAME/../system/osstub.o")
fi

# some newlib symbols are not found if ld is used...
GCC=`(which arm-elf-gcc arm-none-eabi-gcc arm-linux-gnueabi-gcc | head -1) 2>/dev/null`
# lazy system build: must be built with the same toolchain
(cd "$DIRNAME/../system" && make -s all)
ret=$?
if [ $ret -ne 0 ]; then
	exit $ret
fi
if [ $nostartup = false ]; then
	if [ $lightstartup = true ]; then
		startupobj=crt0light.o
	elif [ $noprgmheader = true ]; then
		startupobj=crt0lightnoheader.o
	else
		startupobj=crt0.o
	fi
	args=("$DIRNAME/../system/$startupobj" "${args[@]}")
fi
if [ $noldscript = false ]; then
	args=("-T" "$DIRNAME/../system/ldscript" "${args[@]}")
fi
home="${USERPROFILE:-$HOME}"
mkdir -p "$home/.ndless/lib"
# -nostartfiles: avoids newlib startup which would be added before ours
"$GCC" -nostartfiles -e _nspire_start -L "$DIRNAME/../lib" -L "$USERPROFILE/.ndless/lib" -static "$DIRNAME/../system/crt0sym.o" "${args[@]}" -lSDL -lnspireio2 -lndls
