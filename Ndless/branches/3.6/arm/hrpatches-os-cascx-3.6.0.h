/* This file is generated by MakeHotRebootPtch, do not edit manually */
	PATCH_CLRW(0x10B3B1B0);
    PATCH_CLRW(0x10B3B1E8);
    PATCH_CLRW(0x10B3B234);
    PATCH_WW(0x10B3B2C8, 0xFFFFFFFF);
    PATCH_CLRW(0x10B3B2F8);
    PATCH_CLRW(0x10B3B2FC);
    PATCH_CLRW(0x10B3B300);
    PATCH_WW(0x10B3F514, 0xFFFFFFFF);
    PATCH_CLRW(0x10B3F5EC);
    PATCH_CLRW(0x10B3F5F0);
    PATCH_CLRW(0x10B68674);
    PATCH_CLRW(0x10B6868C);
    PATCH_CLRW(0x10B68690);
    PATCH_CLRZ(0x10B68710, 0x10B68A40);
    PATCH_WW(0x10E08B80, 0x019C);
    PATCH_CLRW(0x10E08BB0);
    PATCH_CLRW(0x10E0A8D8);
    PATCH_CLRW(0x10E0A8F0);
    PATCH_CLRW(0x10E0A8F4);
    PATCH_CLRZ(0x10E0A974, 0x10E0AA20);
    PATCH_CLRW(0x10E11F90);
    PATCH_CLRW(0x10E13CB8);
    PATCH_CLRW(0x10E13CD0);
    PATCH_CLRW(0x10E13CD4);
    PATCH_CLRZ(0x10E13CD4, 0x10E13E04);
    PATCH_CLRW(0x10E1CBE4);
    PATCH_CLRW(0x10E1E90C);
    PATCH_CLRW(0x10E1E924);
    PATCH_CLRW(0x10E1E928);
    PATCH_CLRZ(0x10E1E9A8, 0x10E1EA60);
    PATCH_WW(0x10E9D3C8, 0x01EC);
    PATCH_CLRW(0x10E9D3CC);
    PATCH_CLRW(0x10E9F0F4);
    PATCH_CLRW(0x10E9F10C);
    PATCH_CLRW(0x10E9F110);
    PATCH_CLRZ(0x10E9F190, 0x10E9F248);
    PATCH_CLRW(0x11034FD0);
    PATCH_CLRW(0x11034FD4);
    PATCH_CLRW(0x11034FD8);
    PATCH_CLRW(0x11034FE4);
    PATCH_CLRW(0x11034FE8);
    PATCH_CLRW(0x11034FF8);
    PATCH_CLRW(0x11034FFC);
    PATCH_CLRW(0x11035000);
    PATCH_CLRW(0x11035004);
    PATCH_CLRW(0x11035008);
    PATCH_CLRW(0x11036228);
    PATCH_CLRW(0x1103622C);
    PATCH_CLRW(0x11036230);
    PATCH_CLRW(0x1103623C);
    PATCH_CLRW(0x11036240);
    PATCH_CLRW(0x11036250);
    PATCH_CLRW(0x11036254);
    PATCH_CLRW(0x11036258);
    PATCH_CLRW(0x1103625C);
    PATCH_CLRW(0x11036260);
    PATCH_CLRW(0x11036284);
    PATCH_CLRW(0x11036288);
    PATCH_CLRW(0x1103628C);
    PATCH_CLRW(0x11036298);
    PATCH_CLRW(0x1103629C);
    PATCH_CLRW(0x110362AC);
    PATCH_CLRW(0x110362B0);
    PATCH_CLRW(0x110362B4);
    PATCH_CLRW(0x110362B8);
    PATCH_CLRW(0x110362BC);
    PATCH_CLRW(0x110362C4);
    PATCH_WW(0x110362CC, 0x04);
    PATCH_WW(0x110362D0, 0x09);
    PATCH_WW(0x110362D4, 0x10);
    PATCH_WW(0x110362D8, 0x20);
    PATCH_WW(0x110362DC, 0x0800);
    PATCH_WW(0x110362E0, 0x07D8);
    PATCH_WW(0x110362E4, 0x10A0B224);
    PATCH_WW(0x11036368, 0x1008CE8C);
    PATCH_WW(0x11036378, 0x01);
    PATCH_WW(0x1103637C, 0x01);
    PATCH_WW(0x11036380, 0x10AA7BB4);
    PATCH_CLRW(0x11036390);
    PATCH_CLRW(0x110363A4);
    PATCH_CLRW(0x110363B8);
    PATCH_CLRW(0x110363CC);
    PATCH_CLRW(0x110363E0);
    PATCH_CLRW(0x110363F4);
    PATCH_WW(0x11036400, 0x10A15728);
    PATCH_CLRW(0x11036408);
    PATCH_CLRW(0x1103641C);
    PATCH_CLRW(0x11036430);
    PATCH_CLRW(0x11036444);
    PATCH_WW(0x1103644C, 0x01);
    PATCH_CLRW(0x11036464);
    PATCH_CLRW(0x11036468);
    PATCH_CLRW(0x1103646C);
    PATCH_WW(0x110364A4, 0x00FF00FF);
    PATCH_WW(0x110364B0, 0x65);
    PATCH_CLRW(0x110364B4);
    PATCH_CLRW(0x110364B8);
    PATCH_WW(0x11036528, 0x636E742E);
    PATCH_WW(0x1103652C, 0x6E742E3B);
    PATCH_WW(0x11036530, 0x6F);
    PATCH_CLRZ(0x11036580, 0x110365A0);
    PATCH_CLRZ(0x110366BC, 0x110366DC);
    PATCH_WW(0x11036844, 0x0FC00000);
    PATCH_WW(0x1103684C, 0x07D0);
    PATCH_CLRW(0x11036874);
    PATCH_CLRZ(0x11036888, 0x110368B0);
    PATCH_CLRW(0x110368CC);
    PATCH_CLRZ(0x110368E0, 0x11036908);
    PATCH_CLRZ(0x1103692C, 0x11036954);
    PATCH_WW(0x11036A38, 0x0404);
    PATCH_WW(0x11036A40, 0x01);
    PATCH_WW(0x11036A44, 0x80000000);
    PATCH_WW(0x11036A48, 0x2000);
    PATCH_CLRW(0x1103789C);
    PATCH_CLRZ(0x110378B8, 0x110378F4);
    PATCH_CLRZ(0x11037910, 0x1103794C);
    PATCH_CLRZ(0x11037960, 0x11037998);
    PATCH_WW(0x1103A9F0, 0x10A59DC4);
    PATCH_CLRW(0x1103AA7C);
    PATCH_CLRZ(0x1103AA80, 0x1103AAB8);
    PATCH_CLRZ(0x1103AAC8, 0x1103AB04);
    PATCH_CLRZ(0x1103AB44, 0x1103AB7C);
    PATCH_CLRZ(0x1103ABAC, 0x1103ABE0);
    PATCH_CLRZ(0x1103ABF4, 0x1103AC38);
    PATCH_WW(0x1103ABFC, 0x0C0000);
    PATCH_WW(0x1103AC00, 0x10);
    PATCH_CLRZ(0x1103AC4C, 0x1103AC90);
    PATCH_WW(0x1103AC54, 0x080000);
    PATCH_WW(0x1103AC58, 0x20);
    PATCH_CLRZ(0x1103ACA4, 0x1103ACE8);
    PATCH_WW(0x1103ACAC, 0x0C0000);
    PATCH_WW(0x1103ACB0, 0x40);
    PATCH_CLRZ(0x1103ACFC, 0x1103AD40);
    PATCH_WW(0x1103AD04, 0x0C0000);
    PATCH_WW(0x1103AD08, 0x0100);
    PATCH_CLRW(0x1103AD54);
    PATCH_CLRW(0x1103AD58);
    PATCH_WW(0x1103AD64, 0x112324AC);
    PATCH_WW(0x1103AD68, 0x112324AC);
    PATCH_WW(0x1103AD6C, 0x112324AC);
    PATCH_WW(0x1103AD70, 0x112324AC);
    PATCH_WW(0x1103AD74, 0x112324AC);
    PATCH_WW(0x1103F5B8, 0x01);
    PATCH_WW(0x11047520, 0xFFFFFFFF);
    PATCH_WW(0x11047528, 0xFFFFFFFF);
    PATCH_WW(0x11047684, 0xFFFFFFFF);
    PATCH_WW(0x11048F44, 0xFFFFFFFF);
    PATCH_WW(0x11048F48, 0xFFFFFFFF);
    PATCH_WW(0x11049858, 0x01);
    PATCH_WW(0x11049898, 0xFF);
    PATCH_CLRW(0x110498A4);
    PATCH_CLRZ(0x110498E4, 0x1104993C);
    PATCH_CLRW(0x11049A90);
    PATCH_CLRZ(0x11049AD0, 0x11049B28);
    PATCH_WW(0x1104DE68, 0x01);
    PATCH_WW(0x1104DF3C, 0xFFFFFFFF);
    PATCH_WW(0x1104DF40, 0x01);
    PATCH_CLRZ(0x1104F3C4, 0x1104F3E0);
    PATCH_CLRW(0x1104F450);
    PATCH_WW(0x1104F45C, 0x11FDA800);
    PATCH_WW(0x1104FEDC, 0x3200);
    PATCH_WW(0x1104FF00, 0x0204);
    PATCH_WW(0x1104FF0C, 0x04510007);
    PATCH_CLRW(0x1104FFDC);
    PATCH_WW(0x110501F8, 0x02);
    PATCH_CLRW(0x1105020C);
    PATCH_CLRW(0x11050218);
    PATCH_CLRW(0x11050254);
    PATCH_WW(0x11050258, 0x11050254);
    PATCH_WW(0x1105025C, 0x10AA7BB4);
    PATCH_WW(0x11050290, 0x01);
    PATCH_WW(0x11050294, 0x01);
    PATCH_CLRW(0x110502A0);
    PATCH_CLRW(0x11050334);
    PATCH_CLRW(0x11050370);
    PATCH_CLRW(0x110503C0);
    PATCH_WW(0x110503C4, 0x110503C0);
    PATCH_CLRW(0x110503D4);
    PATCH_WW(0x110503D8, 0x110503D4);
    PATCH_CLRW(0x11050400);
    PATCH_CLRW(0x11050404);
    PATCH_WW(0x11050420, 0xFFFFFFFF);
    PATCH_WW(0x11050424, 0xFFFFFFFF);
    PATCH_WW(0x11050914, 0x112324AC);
    PATCH_WW(0x1105091C, 0x01);
    PATCH_WW(0x11050D5C, 0x112324AC);
    PATCH_WW(0x11051224, 0x01);
    PATCH_CLRW(0x110541B8);
    PATCH_CLRW(0x110541D0);
    PATCH_CLRW(0x110541D4);
    PATCH_CLRZ(0x11054254, 0x11054300);
    PATCH_CLRW(0x11058B5C);
    PATCH_WW(0x11059EB0, 0x01);
    PATCH_WW(0x110A08E0, 0x01);
    PATCH_WW(0x110A08E4, 0x02);
    PATCH_WW(0x110DF8D0, 0x01);
    PATCH_WW(0x110DF8D4, 0x10ABD394);
    PATCH_SETZ(0x110DF9EC, 0x110DFA1C, 0x00230023);
    PATCH_SETZ(0x110DFBEC, 0x110DFC28, 0x002A002A);
    PATCH_SETZ(0x110DFDEC, 0x110DFDFC, 0x00230023);
    PATCH_SETZ(0x110DFFEC, 0x110E000C, 0x002A002A);
    PATCH_SETZ(0x110E01EC, 0x110E0210, 0x00230023);
    PATCH_WW(0x110E0210, 0x23);
    PATCH_SETZ(0x110E03EC, 0x110E0410, 0x002A002A);
    PATCH_WW(0x110E0410, 0x2A);
    PATCH_SETZ(0x110E05EC, 0x110E05FC, 0x00230023);
    PATCH_SETZ(0x110E07EC, 0x110E080C, 0x002A002A);
    PATCH_CLRW(0x110E0A80);
    PATCH_CLRZ(0x110E0A9C, 0x110E0ADC);
    PATCH_CLRZ(0x110E0E94, 0x110E0FC4);
    PATCH_CLRZ(0x110E1000, 0x110E106C);
    PATCH_CLRW(0x110E1574);
    PATCH_CLRW(0x110E1578);
    PATCH_CLRW(0x110E157C);
    PATCH_CLRW(0x110E75D8);
    PATCH_CLRW(0x110E75E4);
    PATCH_CLRW(0x10B3B1AC);
    PATCH_CLRW(0x10B3F5F4);
    PATCH_CLRW(0x10C0452C);
    PATCH_CLRW(0x10C06254);
    PATCH_WW(0x10C06264, 0x690069);
    PATCH_CLRW(0x10C0626C);
    PATCH_CLRW(0x10C06270);
    PATCH_CLRZ(0x10C062F0, 0x10C06394);
    PATCH_CLRW(0x10C171F4);
    PATCH_CLRW(0x10C18F1C);
    PATCH_CLRW(0x10C18F34);
    PATCH_CLRW(0x10C18F38);
    PATCH_CLRZ(0x10C18FB8, 0x10C19068);
    PATCH_CLRW(0x10C7AC98);
    PATCH_CLRW(0x10C7C9C0);
    PATCH_CLRW(0x10C7C9D8);
    PATCH_CLRW(0x10C7C9DC);
    PATCH_CLRZ(0x10C7CA5C, 0x10C7CB00);
    PATCH_CLRW(0x10C8E634);
    PATCH_CLRW(0x10C9035C);
    PATCH_CLRW(0x10C90374);
    PATCH_CLRW(0x10C90378);
    PATCH_CLRZ(0x10C903F8, 0x10C904A8);
    PATCH_CLRW(0x10CF6E00);
    PATCH_CLRW(0x10CF8B28);
    PATCH_CLRW(0x10CF8B40);
    PATCH_CLRW(0x10CF8B44);
    PATCH_CLRW(0x10CF8BC4);
    PATCH_CLRZ(0x10CF8BD4, 0x10CF8C68);
    PATCH_CLRW(0x10D0BCC4);
    PATCH_CLRW(0x10D0D9EC);
    PATCH_CLRW(0x10D0DA04);
    PATCH_CLRW(0x10D0DA08);
    PATCH_CLRZ(0x10D0DA88, 0x10D0DB38);   
    PATCH_CLRW(0x10F0E6D0);
    PATCH_CLRW(0x10F103F8);
    PATCH_CLRW(0x10F10410);
    PATCH_CLRW(0x10F10414);
    PATCH_CLRZ(0x10F10494, 0x10F1053C); 
    PATCH_CLRW(0x10F25108);
    PATCH_CLRW(0x10F26E30);
    PATCH_CLRW(0x10F26E48);
    PATCH_CLRW(0x10F26E4C);
    PATCH_CLRZ(0x10F26ECC, 0x10F26F84); 
    PATCH_CLRW(0x11049B30);
    PATCH_WW(0x1104FB38, 0x12345678);
    PATCH_WW(0x11050220, 0x08000000);
    PATCH_CLRW(0x11050224);
    PATCH_CLRW(0x11050228);
    PATCH_CLRW(0x1105022C);
    PATCH_WW(0x11050230, 0x0209);
    PATCH_WW(0x11050234, 0x80000000);
    PATCH_WW(0x11050238, 0x32);
    PATCH_WW(0x1105023C, 0x0903);
    PATCH_CLRW(0x11050244);
    PATCH_WW(0x1105024C, 0x0507);
    PATCH_CLRW(0x11050250);
    PATCH_CLRW(0x11058B8C);
    PATCH_WW(0x11059E5C, 0x01);
    PATCH_WW(0x11059EB4, 0x112324AC);
    PATCH_WW(0x11059EB8, 0x112324AC);
    PATCH_CLRW(0x110A000C);
    PATCH_CLRW(0x110A0010);
    PATCH_CLRZ(0x110A0038, 0x110A0060); 
    PATCH_WW(0x110A08DC, 0x04);
    PATCH_WW(0x110A115C, 0xF00074F2);
    PATCH_WW(0x110A1160, 0x03000000);
    PATCH_WW(0x110A1164, 0x19A20E7F);
    PATCH_WW(0x110E15B8, 0x0503);
    PATCH_WW(0x110E19E8, 0x04);
    PATCH_CLRW(0x110E303C);
    PATCH_CLRW(0x110E3040);
    PATCH_CLRW(0x110E304C);
    PATCH_CLRZ(0x110E3070, 0x110E3090);  
    PATCH_CLRW(0x110E5A40);
    PATCH_CLRW(0x110E5A50);
    PATCH_CLRW(0x110E5A60);
    PATCH_CLRW(0x110E5A70);
    PATCH_CLRW(0x110E5A80);
    PATCH_CLRW(0x110E5A90);
    PATCH_CLRW(0x110E5AA0);
    PATCH_CLRW(0x110E5AB0);
    PATCH_CLRW(0x110E5AC0);
    PATCH_CLRW(0x110E5AD0);
    PATCH_CLRW(0x110E5AE0);
    PATCH_CLRW(0x110E5AF0);
    PATCH_CLRW(0x110E5B00);
    PATCH_CLRW(0x110E5B10);
    PATCH_CLRW(0x110E5B20);
    PATCH_WW(0x110E76B8, 0x01);